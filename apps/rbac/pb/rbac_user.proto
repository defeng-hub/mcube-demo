syntax = "proto3";

package rbac;
option go_package = "github.com/defeng-hub/mcube-demo/apps/rbac";

service UserService {
    rpc CreateUser(CreateUserRequest) returns(User);
    rpc QueryUser(QueryUserRequest) returns(UserSet);
    rpc DescribeUser(DescribeUserRequest) returns(User);
    rpc DeleteUser(DeleteUserRequest) returns(User);
    rpc UpdateUser(UpdateUserRequest) returns(User);
}

service UserRoleService{
    rpc CreateUserRole(CreateUserRoleRequest) returns(UserRole);
    rpc DeleteUserRole(DeleteUserRoleRequest) returns(UserRole);
}

message User {
    // @gotags: json:"user_id" bson:"user_id"
    int64 user_id = 1;

    // @gotags: json:"user_name" bson:"user_name"
    string user_name = 2;

    // @gotags: json:"pwd" bson:"pwd"
    string pwd = 3;
    string email = 4;
    string phone = 5;
    string address = 6;

    //    用户状态(0:启用，1禁用）
    //   @gotags: json:"state" bson:"state"
    int64 state = 7;

    // 用户类型（用于用户分组，比如管理员)
    // @gotags: json:"user_type" bson:"user_type"
    string user_type = 8;
}

message UserRole {
    int64 id = 1;
    int64 user_id = 2;
    int64 role_id = 3;
}

// UserRole合集
message CreateUserRoleRequest{
    int64 user_id = 1;
    int64 role_id = 2;
}
message DeleteUserRoleRequest{
    int64 id = 1;
}


// User 合集
message UserSet {
    // 分页时，返回总数量a
    // @gotags: json:"total"
    int64 total = 1;
    // 一页的数据
    // @gotags: json:"items"
    repeated User items = 2;
}
message DescribeUserRequest {
    // user id
    // @gotags: json:"user_id"
    int64 user_id = 1;
}
message DeleteUserRequest {
    // @gotags: json:"user_id"
    int64 user_id = 1;
}
message QueryUserRequest {
    // 分页参数
    // @gotags: json:"page"
    PageRequest page = 1;
    // 关键字参数
    // @gotags: json:"keywords"
    string keywords = 2;
}
message CreateUserRequest{
    // @gotags: json:"user_name" bson:"user_name"
    string user_name = 1;

    // @gotags: json:"pwd" bson:"pwd"
    string pwd = 2;
    string email = 3;
    string phone = 4;
    string address = 5;
}

message UpdateUserRequest{
    // @gotags: json:"id"
    int64 user_id = 1;
    // 更新模式
    // @gotags: json:"update_mode"
    UpdateMode update_mode = 2;
    // 更新人
    // @gotags: json:"update_by"
    string update_by = 3;
    // 更新时间
    // @gotags: json:"update_at"
    int64 update_at = 4;
    // @gotags: json:"data"
    CreateUserRequest data = 5;
}

// 公共部分
// 分页!!
message PageRequest {
    uint64 page_size = 1;
    uint64 page_number = 2;
    int64 offset = 3;
}
// 更新模式
enum UpdateMode {
    // 全量更新
    PUT = 0;
    // 部分更新
    PATCH = 1;
}






